steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/my-flask-app:$BUILD_ID', '.']
    timeout: 1800s  # Increased to 30 minutes to handle potential slow builds with large dependencies

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/my-flask-app:$BUILD_ID']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'my-flask-app'
      - '--image'
      - 'gcr.io/$PROJECT_ID/my-flask-app:$BUILD_ID'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '8Gi'  # Maintained at 8Gi to handle 4.15GB usage with buffer for fine-tuning
      - '--cpu'
      - '4'    # Maintained at 4 vCPUs to match memory ratio
      - '--timeout'
      - '3600'  # Maintained at 1 hour to allow fine-tuning completion
      - '--concurrency'
      - '1'     # Maintained at 1 to avoid overloading during fine-tuning
      - '--max-instances'
      - '1'     # Maintained at 1 to control resource usage
      - '--set-env-vars'
      - 'PORT=8080'  # Explicitly set PORT to match your app's default
      - '--set-env-vars'
      - 'CHECKPOINT_DIR=/app/tinyllama-chatdoctor-checkpoint'  # Ensure checkpoint path is writable

images:
  - 'gcr.io/$PROJECT_ID/my-flask-app:$BUILD_ID'

timeout: 7200s  # Increased to 2 hours to account for build and deployment time

options:
  machineType: 'E2_HIGHCPU_8'  # Maintained for high CPU performance
  diskSizeGb: 100  # Maintained at 100GB to accommodate checkpoint and dataset storage
